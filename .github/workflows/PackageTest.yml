name: Test Package

on:
  workflow_dispatch:
  workflow_call:
  push:
  schedule:
    - cron: 0 7 1,15 * *

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        slurm_version:
          - 20.11.9.1
          - 22.05.2.1
          - 23.02.5.1
        python_version:
          - 3.8
          - 3.9
          - 3.10
          - 3.11

    container:
      image: ghcr.io/pitt-crc/test-env:${{ matrix.slurm_version }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Setup environment
        run: /usr/local/bin/entrypoint.sh

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false

      - name: Install dependencies
        run: poetry install --with tests

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m unittest discover 
          poetry run coverage report --omit="tests/*"
          poetry run coverage xml --omit="tests/*" -o coverage.xml

      # Report partial coverage results to codacy for the current python version
      - name: Report partial coverage results
        if: github.event_name != 'release'
        shell: bash
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -l Python -r coverage.xml
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  # Tell codacy we are done reporting test coverage
  report-code-coverage:
    name: Report Coverage
    if: github.event_name != 'release'
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Finish reporting coverage
        shell: bash
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  # Use this job for branch protection rules
  report-test-status:
    name: Report Test Status
    if: always()
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check build status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
